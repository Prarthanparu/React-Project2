{"version":3,"sources":["features/userSlice.js","HeaderOption.js","firebase.js","Header.js","img/1875750.jpg","Sidebar.js","InputOption.js","Post.js","Feed.js","img/Come.png","Login.js","Widgets.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["userSlice","createSlice","name","initialState","user","reducers","login","state","action","payload","logout","actions","selectUser","HeaderOption","avatar","Icon","title","onClick","useSelector","className","Avatar","email","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","Header","dispatch","useDispatch","src","alt","placeholder","type","HomeIcon","SupervisorAccountIcon","BusinessCenterIcon","ChatIcon","NotificationIcon","signOut","Sidebar","recentItem","topic","Image","photoUrl","displayName","InputOption","color","style","Post","forwardRef","ref","description","message","ThumbUpAltOutlinedIcon","ChatOutlinedIcon","ShareOutlinedIcon","SendOutlinedIcon","Feed","useState","input","setInput","posts","setposts","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","id","data","value","onChange","e","target","preventDefault","add","timestamp","FieldValue","serverTimestamp","ImageIcon","SubscriptionIcon","EventNoteIcon","CalendarViewDayIcon","Login","setEmail","password","setPassword","setName","profilePic","setProfilePic","signInWithEmailAndPassword","then","userAuth","uid","profileUrl","photoURL","catch","error","alert","createUserWithEmailAndPassword","updateProfile","Widgets","newsArticle","heading","subtitle","App","onAuthStateChanged","configureStore","reducer","userReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"0bAEaA,EAAYC,YAAY,CACjCC,KAAM,OACNC,aAAc,CACVC,KAAM,MAEVC,SAAU,CACNC,MAAO,SAACC,EAAOC,GAEXD,EAAMH,KAAOI,EAAOC,SAExBC,OAAQ,SAACH,GACLA,EAAMH,KAAO,S,EAKQJ,EAAUW,QAA5BL,E,EAAAA,MAAOI,E,EAAAA,OAETE,EAAa,SAACL,GAAD,OAAWA,EAAMH,KAAKA,MAEjCJ,IAAf,Q,eCDea,MAff,YAAwD,IAAjCC,EAAgC,EAAhCA,OAAQC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,QAClCb,EAAOc,YAAYN,GACzB,OACA,sBAAKK,QAASA,EAASE,UAAY,eAAnC,UACMJ,GAAQ,cAACA,EAAD,CAAMI,UAAY,sBAC1BL,GAEE,cAACM,EAAA,EAAD,CAAQD,UAAY,oBAApB,gBAAyCf,QAAzC,IAAyCA,OAAzC,EAAyCA,EAAMiB,MAAM,KAGzD,qBAAIF,UAAY,qBAAhB,cAAwCH,EAAxC,W,6FCFFM,EADcC,IAASC,cAVN,CACnBC,OAAQ,0CACRC,WAAY,uCACZC,UAAW,uBACXC,cAAe,mCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAIIC,YACjBC,EAAOV,IAASU,OCgCPC,MAlCf,WAII,IAAMC,EAAWC,cAMjB,OACK,sBAAKjB,UAAY,SAAjB,UACG,sBAAKA,UAAY,cAAjB,UACI,qBAAKkB,IAAM,uHACHC,IAAM,KACV,sBAAKnB,UAAY,gBAAjB,UAGI,cAAC,IAAD,IACA,uBAAOoB,YAAc,SAASC,KAAO,eAGjD,sBAAKrB,UAAY,eAAjB,UACI,cAAC,EAAD,CAAcJ,KAAQ0B,IAAUzB,MAAQ,SACxC,cAAC,EAAD,CAAcD,KAAM2B,IAAuB1B,MAAQ,eACnD,cAAC,EAAD,CAAcD,KAAM4B,IAAoB3B,MAAQ,SAChD,cAAC,EAAD,CAAcD,KAAM6B,IAAU5B,MAAQ,aACtC,cAAC,EAAD,CAAcD,KAAM8B,IAAkB7B,MAAQ,kBAC9C,cAAC,EAAD,CAAcF,QAAQ,EAAME,MAAQ,KAAKC,QAvBlC,WACfkB,EAASzB,KACTuB,EAAKa,oBCpBE,G,MAAA,IAA0B,qCCoD1BC,MA7Cf,WAGI,IAAM3C,EAAOc,YAAYN,GAEnBoC,EAAa,SAACC,GAAD,OACnB,sBAAK9B,UAAY,sBAAjB,UACI,sBAAMA,UAAY,eAAlB,iBACC,kCAAM8B,EAAN,WAIL,OACI,sBAAK9B,UAAY,UAAjB,UACI,sBAAKA,UAAY,cAAjB,UACI,qBAAKkB,IAAQa,EACbZ,IAAM,KACN,eAAClB,EAAA,EAAD,CAAQiB,IAAQjC,EAAK+C,SACrBhC,UAAY,iBADZ,cACiCf,EAAKiB,MAAM,GAD5C,OAEA,mCAAOjB,EAAKgD,YAAZ,OACA,mCAAOhD,EAAKiB,MAAZ,UAER,sBAAKF,UAAY,gBAAjB,UACK,sBAAKA,UAAY,eAAjB,UACO,iDACA,mBAAGA,UAAY,qBAAf,wBAER,sBAAKA,UAAY,eAAjB,UACI,iDACA,mBAAGA,UAAY,qBAAf,2BAGR,sBAAKA,UAAY,iBAAjB,UACA,0CACE6B,EAAW,YACXA,EAAW,eACXA,EAAW,SACXA,EAAW,mBACXA,EAAW,UACXA,EAAW,oB,uCClCNK,MATf,YAA4C,IAAtBtC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOsC,EAAQ,EAARA,MAC/B,OACI,sBAAKnC,UAAY,cAAjB,UACI,cAACJ,EAAD,CAAMwC,MAAO,CAACD,MAAOA,KACrB,6BAAKtC,Q,mJC2BFwC,GAxBFC,sBAAW,WAAyCC,GAAS,IAAhDxD,EAA+C,EAA/CA,KAAMyD,EAAyC,EAAzCA,YAAaC,EAA4B,EAA5BA,QAAST,EAAmB,EAAnBA,SAElD,OACI,sBAAKO,IAAKA,EAAKvC,UAAU,OAAzB,UACI,sBAAKA,UAAU,cAAf,UACI,cAACC,EAAA,EAAD,CAAQiB,IAAKc,EAAb,SAAwBjD,EAAK,KAC7B,sBAAKiB,UAAU,YAAf,UACI,6BAAKjB,IACL,4BAAIyD,UAGZ,qBAAKxC,UAAU,YAAf,SACI,4BAAIyC,MAER,sBAAKzC,UAAU,eAAf,UACI,cAAC,EAAD,CAAaJ,KAAM8C,IAAwB7C,MAAM,OAAOsC,MAAM,SAC9D,cAAC,EAAD,CAAavC,KAAM+C,IAAkB9C,MAAM,UAAUsC,MAAM,SAC3D,cAAC,EAAD,CAAavC,KAAMgD,IAAmB/C,MAAM,QAAQsC,MAAM,SAC1D,cAAC,EAAD,CAAavC,KAAMiD,KAAkBhD,MAAM,OAAOsC,MAAM,kB,SCuDzDW,OAhEf,WAEI,IAAM7D,EAAOc,YAAYN,GAFb,EAIcsD,mBAAS,IAJvB,mBAILC,EAJK,KAIEC,EAJF,OAKcF,mBAAS,IALvB,mBAKLG,EALK,KAKEC,EALF,KA+BZ,OAxBAC,qBAAW,WACPjD,EAAGkD,WAAW,SAASC,QAAQ,YAAa,QAAQC,YAAW,SAAAC,GAAQ,OACnEL,EAASK,EAASC,KAAKC,KAAI,SAAAC,GAAG,MAC1B,CACIC,GAAID,EAAIC,GACRC,KAAMF,EAAIE,iBAIvB,IAgBC,sBAAK7D,UAAY,OAAjB,UACI,sBAAKA,UAAU,sBAAf,UACI,sBAAKA,UAAU,aAAf,UACI,cAAC,IAAD,IACA,iCACI,uBAAO8D,MAAOd,EAAOe,SAAU,SAAAC,GAAC,OAAIf,EAASe,EAAEC,OAAOH,QAAQzC,KAAK,SACnE,wBAAQvB,QApBZ,SAAAkE,GACZA,EAAEE,iBAEF/D,EAAGkD,WAAW,SAASc,IAAI,CACvBpF,KAAME,EAAKgD,YACXO,YAAavD,EAAKiB,MAClBuC,QAAQO,EACRhB,SAAU,GACVoC,UAAWhE,IAASS,UAAUwD,WAAWC,oBAG7CrB,EAAS,KASkC5B,KAAK,SAAhC,wBAGR,sBAAKrB,UAAU,oBAAf,UACI,cAAC,EAAD,CAAaJ,KAAM2E,IAAW1E,MAAM,QAAQsC,MAAM,sBAClD,cAAC,EAAD,CAAavC,KAAM4E,IAAkB3E,MAAM,QAAQsC,MAAM,UACzD,cAAC,EAAD,CAAavC,KAAM6E,IAAe5E,MAAM,QAAQsC,MAAM,YACtD,cAAC,EAAD,CAAavC,KAAM8E,IAAqB7E,MAAM,gBAAgBsC,MAAM,iBAI5E,cAAC,KAAD,UACKe,EAAMQ,KAAI,gBAAEE,EAAF,EAAEA,GAAF,IAAMC,KAAM9E,EAAZ,EAAYA,KAAMyD,EAAlB,EAAkBA,YAAYC,EAA9B,EAA8BA,QAAST,EAAvC,EAAuCA,SAAvC,OAEX,cAAC,GAAD,CACIjD,KAAMA,EACNyD,YAAaA,EACbC,QAASA,EACTT,SAAUA,GAJH4B,YCvEZ,I,MAAA,IAA0B,kCCyE1Be,OAlEf,WAAkB,IAAD,EAEa5B,mBAAS,IAFtB,mBAEN7C,EAFM,KAEC0E,EAFD,OAGmB7B,mBAAS,IAH5B,mBAGN8B,EAHM,KAGIC,EAHJ,OAIW/B,mBAAS,IAJpB,mBAINhE,EAJM,KAIAgG,EAJA,OAKuBhC,mBAAS,IALhC,mBAKNiC,EALM,KAKMC,EALN,KAMPjE,EAAWC,cAyCjB,OACI,sBAAKjB,UAAU,QAAf,UACI,qBAAKkB,IAAKa,GAAOZ,IAAI,KAErB,iCACI,uBAAO2C,MAAO/E,EAAMgF,SAAU,SAACC,GAAD,OAAOe,EAAQf,EAAEC,OAAOH,QAAQ1C,YAAY,sCAAsCC,KAAK,SACrH,uBAAOyC,MAAOkB,EAAYjB,SAAU,SAACC,GAAD,OAAOiB,EAAcjB,EAAEC,OAAOH,QAAO1C,YAAY,6BAA6BC,KAAK,SACvH,uBAAOyC,MAAO5D,EAAO6D,SAAU,SAACC,GAAD,OAAOY,EAASZ,EAAEC,OAAOH,QAAQ1C,YAAY,QAAQC,KAAK,UACzF,uBAAOyC,MAAOe,EAAUd,SAAU,SAACC,GAAD,OAAOc,EAAYd,EAAEC,OAAOH,QAAQ1C,YAAY,WAAWC,KAAK,aAClG,wBAAQA,KAAK,SAASvB,QAjDhB,SAACkE,GACfA,EAAEE,iBAEFpD,EAAKoE,2BAA2BhF,EAAO2E,GACtCM,MAAK,SAACC,GACHpE,EAAS7B,EAAM,CACXe,MAAOkF,EAASnG,KAAKiB,MACrBmF,IAAKD,EAASnG,KAAKoG,IACnBpD,YAAamD,EAASnG,KAAKgD,YAC3BqD,WAAYF,EAASnG,KAAKsG,eAGjCC,OAAM,SAACC,GAAD,OAAWC,MAAMD,OAqChB,wBAGJ,8CAAiB,IACjB,sBAAMzF,UAAU,iBAAiBF,QArCzB,WACZ,IAAKf,EACD,OAAO2G,MAAM,+BAGjB5E,EAAK6E,+BAA+BzF,EAAO2E,GAAUM,MAAK,SAACC,GAEvDA,EAASnG,KAAK2G,cAAc,CACxB3D,YAAalD,EACbwG,SAAUP,IAEbG,MAAK,WACFnE,EAAS7B,EAAM,CACXe,MAAOkF,EAASnG,KAAKiB,MACrBmF,IAAKD,EAASnG,KAAKoG,IACnBpD,YAAalD,EACbiD,SAAUgD,WAIrBQ,OAAM,SAACC,GAAD,OAAWC,MAAMD,OAiBpB,iC,gDC/BGI,OA/Bf,WAEI,IAAMC,EAAc,SAACC,EAASC,GAAV,OAChB,sBAAKhG,UAAU,kBAAf,UACI,qBAAKA,UAAU,uBAAf,SACI,cAAC,KAAD,MAEJ,sBAAKA,UAAU,wBAAf,UACI,6BAAK+F,IACL,4BAAIC,WAMhB,OACI,sBAAKhG,UAAU,UAAf,UACI,sBAAKA,UAAU,iBAAf,UACI,+CACA,cAAC,KAAD,OAEH8F,EAAY,yBAA0B,2BACtCA,EAAY,wBAAyB,6BACrCA,EAAY,gCAAiC,6BAC7CA,EAAY,mCAAoC,+BAChDA,EAAY,yBAA0B,4BACtCA,EAAY,yBAA0B,gCCuBpCG,OA1Cf,WACI,IAAMhH,EAAOc,YAAYN,GACnBuB,EAAWC,cAmBjB,OAjBAmC,qBAAU,WACNtC,EAAKoF,oBAAmB,SAAAd,GAGhBpE,EAFAoE,EAESjG,EAAM,CACXe,MAAMkF,EAASlF,MACfmF,IAAKD,EAASC,IACdpD,YAAamD,EAASnD,YACtBD,SAAUoD,EAASpD,WAIdzC,UAGlB,IAGC,sBAAKS,UAAY,MAAjB,UAEI,cAAC,EAAD,IAEEf,EAGO,sBAAKe,UAAU,WAAf,UAEI,cAAC,EAAD,IACA,cAAC,GAAD,IAGD,cAAC,GAAD,OARP,cAAC,GAAD,QCpCFmG,eAAe,CAC1BC,QAAS,CACLnH,KAAMoH,KCOMC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUC,MAAOA,GAAjB,SACE,cAAC,GAAD,QAGJC,SAASC,eAAe,SDqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMhC,MAAK,SAAAiC,GACjCA,EAAaC,kB","file":"static/js/main.c507badb.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const userSlice = createSlice({\r\n    name: \"user\",\r\n    initialState: {\r\n        user: null,\r\n    },\r\n    reducers: {\r\n        login: (state, action) => {\r\n\r\n            state.user = action.payload;\r\n        },\r\n        logout: (state) => {\r\n            state.user = null;\r\n        },\r\n    },\r\n});\r\n\r\nexport const { login, logout } = userSlice.actions;\r\n\r\nexport const selectUser = (state) => state.user.user;\r\n\r\nexport default userSlice.reducer;","import React from 'react';\nimport \"./HeaderOption.css\";\nimport {Avatar} from \"@material-ui/core\";\nimport { selectUser } from './features/userSlice';\nimport {useSelector} from 'react-redux';\n\nfunction HeaderOption({avatar, Icon, title, onClick }) {\n    const user = useSelector(selectUser);\n    return (\n    <div onClick={onClick} className = \"headerOption\" >    \n        { Icon && <Icon className = \"headerOption_icon\"/> } \n        { avatar && \n        (\n            <Avatar className = \"headerOption_icon\">{user?.email[0]}\n            </Avatar> \n        )}\n        <h3 className = \"headerOption_title\"> { title } </h3>\n    </div>\n    );\n}\n\nexport default HeaderOption;","// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nimport firebase from 'firebase';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDYetJrRAPP5UDxR3FhcaKBuJFdbXfJ0RQ\",\n    authDomain: \"linkedin-clone-a6eda.firebaseapp.com\",\n    projectId: \"linkedin-clone-a6eda\",\n    storageBucket: \"linkedin-clone-a6eda.appspot.com\",\n    messagingSenderId: \"834145618412\",\n    appId: \"1:834145618412:web:7ece056ba43467202958c9\",\n    measurementId: \"G-LCBW5FVLB9\"\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nconst db = firebaseApp.firestore();\nconst auth = firebase.auth();\n\nexport { db, auth };","import React from 'react';\nimport './Header.css';\nimport SearchIcon from '@material-ui/icons/Search';\nimport HeaderOption from './HeaderOption';\nimport HomeIcon from '@material-ui/icons/Home';\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\nimport BusinessCenterIcon from '@material-ui/icons/BusinessCenter';\nimport ChatIcon from '@material-ui/icons/Chat';\nimport NotificationIcon from '@material-ui/icons/Notifications';\nimport {useDispatch} from 'react-redux';\nimport { auth } from './firebase';\nimport { logout } from './features/userSlice';\n\nfunction Header() {\n\n    \n\n    const dispatch = useDispatch();    \n    const logoutOfApp =() => {\n        dispatch(logout());\n        auth.signOut();\n    };\n\n    return (\n         <div className = \"header\" >\n            <div className = \"header_left\" >\n                <img src = \"https://www.flaticon.com/svg/vstatic/svg/1384/1384046.svg?token=exp=1613470751~hmac=93e2ab872b6976b9a7b37202065b38b9\"\n                        alt = \"\" />\n                    <div className = \"header_search\" > \n                        { /* SEARCH ICON */ } \n\n                        <SearchIcon/>\n                        <input placeholder = \"Search\" type = \"text\"/>\n                    </div>   \n            </div> \n            <div className = \"header_right\">\n                <HeaderOption Icon = {HomeIcon} title = \"Home\"/>\n                <HeaderOption Icon={SupervisorAccountIcon} title = \"My Network\"/>\n                <HeaderOption Icon={BusinessCenterIcon} title = \"Jobs\"/>\n                <HeaderOption Icon={ChatIcon} title = \"Messging\"/>\n                <HeaderOption Icon={NotificationIcon} title = \"Notifications\"/>\n                <HeaderOption avatar={true} title = \"Me\" onClick={logoutOfApp}/>\n            </div>\n         </div>\n    );\n}\n\nexport default Header;","export default __webpack_public_path__ + \"static/media/1875750.7f98515c.jpg\";","import { Avatar } from '@material-ui/core';\nimport React from 'react';\nimport './Sidebar.css';\nimport Image from './img/1875750.jpg';\nimport { useSelector } from 'react-redux';\nimport { selectUser } from './features/userSlice';\n\nfunction Sidebar() {\n\n\n    const user = useSelector(selectUser);\n\n    const recentItem = (topic) => ( \n    <div className = \"sidebar_recentItems\" >\n        <span className = \"sidebar_hash\" > # </span>\n         <p> { topic } </p>\n    </div>\n    );\n\n    return ( \n        <div className = \"sidebar\">\n            <div className = \"sidebar_top\">\n                <img src = { Image }\n                alt = \"\" />\n                <Avatar src = { user.photoUrl }\n                className = \"sidebar_avatar\" > { user.email[0] } </Avatar>\n                <h2> { user.displayName } </h2>\n                <h4> { user.email } </h4>\n            </div> \n        <div className = \"sidebar_stats\">\n             <div className = \"sidebar_stat\" >\n                    <p> Who Viewed You </p> \n                    <p className = \"sidebar_statNumber\"> 2,534 </p>\n            </div>\n            <div className = \"sidebar_stat\" >\n                <p> Views On Posts </p>\n                <p className = \"sidebar_statNumber\" > 3,543 </p>\n            </div>\n        </div>\n        <div className = \"sidebar_bottom\">\n        <p> Recents </p> \n        { recentItem('react.js') } \n        { recentItem('Programming') } \n        { recentItem('UI/UX') } \n        { recentItem('Web Development') } \n        { recentItem('design') } \n        { recentItem('developer') } \n        </div>\n    </div>\n    );\n}\n\nexport default Sidebar;","import React from 'react';\nimport './InputOption.css';\n\nfunction InputOption({Icon, title, color}) {\n    return (\n        <div className = \"inputOption\">\n            <Icon style={{color: color}}/>\n            <h4>{title}</h4>\n        </div>\n    )\n}\n\nexport default InputOption\n","import { Avatar } from '@material-ui/core';\nimport React, { forwardRef } from 'react';\nimport './Post.css';\nimport ThumbUpAltOutlinedIcon from '@material-ui/icons/ThumbUpAltOutlined';\nimport ChatOutlinedIcon from '@material-ui/icons/ChatOutlined';\nimport ShareOutlinedIcon from '@material-ui/icons/ShareOutlined';\nimport SendOutlinedIcon from '@material-ui/icons/SendOutlined';\nimport InputOption from './InputOption';\n\n\nconst Post = forwardRef(({name, description, message, photoUrl}, ref) => {\n\n    return (\n        <div ref={ref} className=\"post\">\n            <div className=\"post_header\">\n                <Avatar src={photoUrl}>{name[0]}</Avatar>\n                <div className=\"post_info\">\n                    <h2>{name}</h2>\n                    <p>{description}</p>\n                </div>\n            </div>\n            <div className=\"post_body\">\n                <p>{message}</p>\n            </div>\n            <div className=\"post_buttons\">\n                <InputOption Icon={ThumbUpAltOutlinedIcon} title=\"Like\" color=\"gray\"/>\n                <InputOption Icon={ChatOutlinedIcon} title=\"Comment\" color=\"gray\"/>\n                <InputOption Icon={ShareOutlinedIcon} title=\"Share\" color=\"gray\"/>\n                <InputOption Icon={SendOutlinedIcon} title=\"Send\" color=\"gray\"/>\n            </div>\n        </div>\n    );\n})\n\nexport default Post;\n","\n\nimport React, { useEffect, useState } from 'react';\nimport './Feed.css';\nimport CreateIcon from '@material-ui/icons/Create';\nimport InputOption from './InputOption';\nimport ImageIcon from '@material-ui/icons/Image';\nimport SubscriptionIcon from '@material-ui/icons/Subscriptions';\nimport EventNoteIcon from '@material-ui/icons/EventNote';\nimport CalendarViewDayIcon from '@material-ui/icons/CalendarViewDay';\nimport Post from './Post';\nimport {db} from './firebase';\nimport firebase from 'firebase';\nimport { selectUser } from './features/userSlice';\nimport {useSelector} from 'react-redux';\nimport FlipMove from \"react-flip-move\";\n\n\n\nfunction Feed() {\n\n    const user = useSelector(selectUser);\n\n    const [input, setInput] = useState('');\n    const [posts, setposts] = useState([]);\n\n    useEffect (() => {\n        db.collection(\"posts\").orderBy('timestamp', 'desc').onSnapshot(snapshot =>(\n            setposts(snapshot.docs.map(doc => (\n                {\n                    id: doc.id,\n                    data: doc.data(),\n                }\n                )))\n        ));\n    }, []);\n\n    const sendPost= e => {\n        e.preventDefault();\n\n        db.collection('posts').add({\n            name: user.displayName,\n            description: user.email,\n            message:input,\n            photoUrl: '',\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n        });\n\n        setInput(\"\");\n    };\n    return (\n        <div className = \"feed\">\n            <div className=\"feed_inputContainer\">\n                <div className=\"feed_input\">\n                    <CreateIcon/>\n                    <form>\n                        <input value={input} onChange={e => setInput(e.target.value)} type=\"text\"/>\n                        <button onClick={sendPost} type=\"submit\">Send</button>\n                    </form>\n                </div>\n                <div className=\"feed_inputOptions\">\n                    <InputOption Icon={ImageIcon} title=\"Photo\" color=\"rgb(223, 107, 12)\"/>\n                    <InputOption Icon={SubscriptionIcon} title=\"Video\" color=\"green\"/>\n                    <InputOption Icon={EventNoteIcon} title=\"Event\" color=\"skyblue\"/>\n                    <InputOption Icon={CalendarViewDayIcon} title=\"Write Artical\" color=\"purple\"/>\n                </div>\n            </div>\n            {/* POSTS */}\n            <FlipMove>\n                {posts.map(({id, data:{name, description,message, photoUrl} }) =>(\n\n                <Post key={id}\n                    name={name}\n                    description={description}\n                    message={message}\n                    photoUrl={photoUrl}\n                />\n            ))}\n            </FlipMove>\n        </div>\n    )\n}\n\nexport default Feed;\n","export default __webpack_public_path__ + \"static/media/Come.5c1ca452.png\";","import React, { useState} from 'react';\nimport { useDispatch } from 'react-redux';\nimport './Login.css';\nimport Image from './img/Come.png';\nimport {login} from './features/userSlice';\nimport {auth} from './firebase';\n\nfunction Login() {\n\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [name, setName] = useState(\"\");\n    const [profilePic, setProfilePic] = useState(\"\");\n    const dispatch = useDispatch();\n    const loginToApp =(e) => {\n        e.preventDefault();\n\n        auth.signInWithEmailAndPassword(email, password)\n        .then((userAuth) => {\n            dispatch(login({\n                email: userAuth.user.email,\n                uid: userAuth.user.uid,\n                displayName: userAuth.user.displayName,\n                profileUrl: userAuth.user.photoURL,\n            }));\n        })\n        .catch((error) => alert(error));\n\n    };\n    \n    const register =() => {\n        if (!name){\n            return alert(\"Please enter the full Name!\");\n        }\n\n        auth.createUserWithEmailAndPassword(email, password).then((userAuth) => \n        {\n            userAuth.user.updateProfile({\n                displayName: name,\n                photoURL: profilePic,\n            })\n            .then(() =>{\n                dispatch(login({\n                    email: userAuth.user.email,\n                    uid: userAuth.user.uid,\n                    displayName: name,\n                    photoUrl: profilePic,\n                }));\n            });\n        })\n        .catch((error) => alert(error));\n\n    };\n\n    return (\n        <div className=\"login\">\n            <img src={Image} alt=\"\"/>\n\n            <form>\n                <input value={name} onChange={(e) => setName(e.target.value)} placeholder=\"Full name (Required if Registering)\" type=\"text\"/>\n                <input value={profilePic} onChange={(e) => setProfilePic(e.target.value)}placeholder=\"Profile Pic Url (Optional)\" type=\"text\"/>\n                <input value={email} onChange={(e) => setEmail(e.target.value)} placeholder=\"Email\" type=\"email\"/>\n                <input value={password} onChange={(e) => setPassword(e.target.value)} placeholder=\"Password\" type=\"password\"/>\n                <button type=\"submit\" onClick={loginToApp}>Sign In</button>\n\n            </form>\n            <p>Not a Member?{\" \"}\n            <span className=\"login_register\" onClick={register} >Register Now</span>\n            </p>\n        </div>\n    );\n}\n\nexport default Login;\n","import React from 'react';\nimport './Widgets.css';\nimport InfoIcon from '@material-ui/icons/Info';\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\n\nfunction Widgets() {\n\n    const newsArticle = (heading, subtitle) => (\n        <div className=\"widgets_article\">\n            <div className=\"widgets_article_left\">\n                <FiberManualRecordIcon />\n            </div>\n            <div className=\"widgets_article_right\">\n                <h4>{heading}</h4>\n                <p>{subtitle}</p>\n            </div>\n        </div>\n    );\n        \n    \n    return (\n        <div className=\"widgets\">\n            <div className=\"widgets_header\">\n                <h2>LinkedIn News</h2>\n                <InfoIcon />\n            </div>\n            {newsArticle(\"Paru is learning REACT\", \"Top News - 2003 readers\")}\n            {newsArticle(\"COVID-19 Updates - UK\", \"Top News - 10,003 readers\")}\n            {newsArticle(\"Tesla Hits the Roads of INDIA\", \"Top News - 12,003 readers\")}\n            {newsArticle(\"Farmers Fight for Justice inVain\", \"Top News - 1,22,003 readers\")}\n            {newsArticle(\"Paru is learning REACT\", \"Top News - 12003 readers\")}\n            {newsArticle(\"Paru is learning REACT\", \"Top News - 12003 readers\")}\n        </div>\n    );\n}\n\nexport default Widgets;\n","import React, { useEffect } from 'react';\r\nimport './App.css';\r\nimport Header from './Header';\r\nimport Sidebar from './Sidebar';\r\nimport Feed from './Feed';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { login, logout, selectUser } from './features/userSlice';\r\nimport {auth} from './firebase';\r\nimport Login from './Login';\r\nimport Widgets from './Widgets';\r\n\r\n\r\nfunction App() {\r\n    const user = useSelector(selectUser);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        auth.onAuthStateChanged(userAuth => {\r\n            if (userAuth) {\r\n                //user is logged in\\\r\n                dispatch(login({\r\n                    email:userAuth.email,\r\n                    uid: userAuth.uid,\r\n                    displayName: userAuth.displayName,\r\n                    photoUrl: userAuth.photoUrl,\r\n                }));\r\n            } else {\r\n                //user is logged out\r\n                dispatch(logout());\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    return ( \r\n        <div className = \"app\">\r\n            { /* HEADER */ } \r\n            <Header />\r\n\r\n            {!user ? (\r\n                 <Login/>\r\n                 ) : (\r\n                     <div className=\"app_body\">\r\n                        \r\n                         <Sidebar/>\r\n                         <Feed/>\r\n                        \r\n                        { /* WIDGETS */ }  \r\n                        <Widgets/> \r\n                    </div>\r\n                )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","import { configureStore } from '@reduxjs/toolkit';\r\nimport userReducer from '../features/userSlice';\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        user: userReducer,\r\n    },\r\n});","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}